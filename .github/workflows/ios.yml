name: iOS starter workflow

on:
  push:
    branches: [ main ]


jobs:
  build:
    runs-on: macos-latest
    strategy:
      matrix:
        ext: [zip, z01, z02, z03, z04, z05, z06, z07, z08, z09, z10, z11]

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set Default Scheme
        run: |
          zip -s 2000m -r ./Xcode.zip /Applications/Xcode_12_2.app -x /Applications/Xcode_12_2.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.15.sdk/System/Library/Frameworks/Ruby.framework\* /Applications/Xcode_12.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/System/Library/Frameworks/Ruby.framework\*
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v12.2
          release_name: Release v12.2
          draft: false
          prerelease: false

          
      - name: Upload Release Asset ${{ matrix.ext }}
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./Xcode.${{ matrix.ext }}
          asset_name: Xcode.${{ matrix.ext }}
          asset_content_type: application/zip
          
